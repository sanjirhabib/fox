#line 2 "/web/fox/www/main.fox"
#include "main.h"
main(){
	req=http_req()
	path=req.path.next
	_globals.dbs.user="/web/habibur/user.db"
	_globals.dbs.blog="blog.db"
	sess_init()
	_globals.tabs={Home: home_url()}
	if path==="/"
		rows="select * from blog where status!='draft' order by datetime desc limit 10".sql_rows(:blog)
		body=''
		rows.each row
			body.=---
			<h3><a href="$(row.id)/">$(row.title)</a></h3>
			<div class='posted'>Posted: $(row.datetime.time_ago()) ago.</div>
			<div>$(row.html)</div>
			<hr noshade=noshade>
			---
		css=---
		hr {width:90%;margin:auto;height:1px;margin-bottom:4em;margin-top:3em;color:gray;}
		h1, h2, h3, h4, h5, h6 {text-align: left;}
		.posted {text-align: right;}
		div {text-align:justify;}
		---;
		data={{
			title Habib's Blog
			body =body
			css =css
		}}
		if :habib.is_user()
			data.menu={{
				add/ +Write New
				draft/ Drafts
			}}
		data.show_page()
	map* parts=NULL
	if (parts=path.re_match("^([0-9]+)/"))
		id=parts[1]
		_globals.tabs[:Post]=(id.."/").home_url()
		row="select * from blog where id=:id".sql_row(:blog,{id: id})
		if !row => "Blog $id".not_found()
		if path.re_match("^[0-9]+/$")
			data={{
				title =row.title
				tab Home
				body =row.html
			}}
			if :habib.is_user()
				data.menu={{
					edit/ Edit
				}}
			data.show_page()
		if path.re_match("^[0-9]+/edit/$")
			_globals.tabs[:Edit]=(id.."/edit/").home_url()
			form={{
				title Post A New Blog
				cols
					title - text
					body - source
				buttons
					publish -
					draft -
				vals =row
			}}
			data=form.form_data()
			if data.draft
				data.status=:draft			
				data.html=data.body.fox_markdown()
				id.id_update(:blog,:blog,data)
				"../".http_redirect()
			else if data.publish
				data.status=:live	
				data.html=data.body.fox_markdown()
				id.id_update(:blog,:blog,data)
				"$id/".home_url().http_redirect()
			form.show_form()
	if path==="draft/"
		_globals.tabs[:Drafts]="draft/".home_url()
		body=''
		"select * from blog where status='draft' order by datetime desc".sql_rows(:blog).each row
			body.=---
				<div class="row">
					<div class="span8">$(row.title) [<a href="../$(row.id)/edit/">Edit</a>]</div>
				</div>
			---
		{{
			title Saved Drafts
			body =(body or "No drafts found")
		}}.show_page()
	if path==="add/"
		_globals.tabs["Add New"]="add/".home_url()
		:habib.authorized()
		form={{
			title Post A New Blog
			cols
				title - text
				body - source
			buttons
				publish -
				draft -
		}}
		data=form.form_data()
		if data.save
			data.status=:draft			
			data.datetime=datetime()
			data.html=data.body.fox_markdown()
			row_insert(data,:blog,:blog)
		else if data.publish
			data.status=:live	
			data.datetime=datetime()
			data.html=data.body.fox_markdown()
			row_insert(data,:blog,:blog)
			home_url().http_redirect()
		form.show_form()
	if path==="login/"
		_globals.tabs[:Login]="login/".home_url()
		form={{
			title Login
			cols
				username - code
				password - password
			buttons
				login -
		}}
		save_refere()
		data=form.form_data()
		if data
			row="select * from user where username=:name".sql_row(:user,{name: data.username})
			if !row
				form.error.username="User not found"
			else if row.password!==md5(data.password.."habibur.com")
				form.error.password="Password mismatched"
			else
				_globals.sess.user=row.username
				_globals.sess.role=row.role
				referer().http_redirect()
				form.msg="Login OK"

			if form.error
				form.msg="Login failed"
		form.show_form()
	if path==="logout/"
		_globals.sess={}
		referer().http_redirect()
	"$(_globals.req.path.full) [$path]".not_found()	
}
void save_refere(){
	refer=referer()
	req=_globals.req
	if req.method!==:get || !refer || req.gets._refer || refer.str_end(req.path) => return
	req.gets._refer=refer
	"./?$(req.gets.map_amps())".http_redirect()
}
char* home_url(char* path=NULL) => return _globals.req.path.home.full_url()..path
char* referer(){
	return _globals.req.gets._refer or env_vars().HTTP_REFERER.parse_url().path or home_url()
}
char* name_id(char* name){
	return name
}
char* ctrl_html(map* ctrl){
	id=ctrl.id or ctrl.name.name_id()
	if ctrl.type===:code
		return ---
		<input type=text name=$(ctrl.name) value="$(ctrl.value)" id=$id size="input-$(ctrl.size or :medium)"></input>
		---
	if ctrl.type===:text
		return ---
		<input type=text name=$(ctrl.name) value="$(ctrl.value)" id=$id size="input-$(ctrl.size or :large)"></input>
		---
	if ctrl.type===:para
		return ---
		<textarea class="source" style="width:20em; height:10em;" id=$id name='$(ctrl.name)'>$(ctrl.value)</textarea>
		---
	if ctrl.type===:source
		static int codeincluded=0
		if !codeincluded
			_globals.jsfile[]='jquery.textarea.js'
			_globals.css[]=".source {font-family:courier;overflow:auto;width:100%;height:30em;}"
			_globals.js[]='$(\"#'..id.."\").tabby()"
			codeincluded=1
		return ---
		<textarea id=$id class='source' wrap='off' name='$(ctrl.name)'>$(ctrl.value)</textarea>
		---
	if ctrl.type===:password
		return ---
		<input type=password name=$(ctrl.name) value="$(ctrl.value)" id=$id></input>
		---
	return "control type $(ctrl.type) unspported. please provide support in ctrl_html()"
}
char* form_html(map* mp){
	mp.vals.each val,key
		if mp.cols[key] => mp.cols[key].value=val
	ret=---
	<fieldset><legend>$(mp.title)</legend>
	<p class='text-$(mp.error ? :error : :info)'>$(mp.msg)</p>
	<form method=$(mp.method or :post)>
	---
	mp.cols.each val, name
		ret.=---
		<div class="control-group">
		<label>$(val.label or val.name.str_title())</label>$(val.ctrl_html())
		<span class='help-block'>$(mp.error[name])</span>
		</div>
		---
	ret.="<div class='form-actions'><div class='btn-group'>"
	mp.buttons.each val, name, idx
		ret.=---
		<input class='btn$(!idx ? " btn-primary" : "")' type='submit' name='$(val.name)' value='$(val.name.str_title())'>
		---
	ret.="</div></div>"
	ret.="</form>"
	return ret
}
int not_found(char* path=NULL) => "The requested content $(path or _globals.req.path) was not found on the server.".http_out("404 Not Found"); return -404
int show_page(map* data) => data.page_data().page_html().http_out(); return 0
map* param_map(char* in){
	ret={}
	in.str_split("&").each val
		two=val.str_split("=",2)
		ret[two[0]]=two[1]
	return ret
}
map* form_data(map* form){
	if _globals.req.method!==:post => return NULL
	param=_globals.req.post.amps_map()
	form.buttons.each ,key
		if param[key]
			form.cols.each val,key
				val.value=param[key]
			return param
	return NULL
}
int show_form(map* data){
	data.body=data.form_html()
	return data.show_page()
}
map* page_data(map* data){
	data.base||="/habibur"
	data.title||="Habib's Site"
	data.tab||=data.title
	data.logo||=data.base.."/logo.jpg"
	data.home="/"
	data.css&&="<style>\n$(data.css)\n</style>"
	head=''
	['/res/bootstrap.css','/res/bootstrap-responsive.css','/res/jquery.js','/res/bootstrap.js']
	.each v
		if v.sub_str(-4)==='.css' => head.="<link rel='stylesheet' href='$v'></link>\n"
		else head.="<script async src='$v'></script>\n"
	_globals.jsfile.each v
		head.="<script async src='$v'></script>\n"
	data.header=head..data.css
		..(_globals.css and "<style>\n".._globals.css.map_join("\n").."</style>")
	data.footer=---
	Run Time: $(run_time())ms=$(gc_time())/$(run_time()-total_time()-gc_time())/$(total_time())
	Malloc: $(total_kb())KB. Total: $(max_mem()/1024)KB.
	GC: $(gc_runs())runs.
	---
	footer.=(_globals.js and "<script>\n".._globals.js.map_join("\n").."</script>")
	tabs=''
	lddata={"@context": "http://schema.org", "@type": "BreadcrumbList"}
	i=1
	_globals.tabs.each url, name, idx
		active=''
		if idx==_globals.tabs.map_len()-1
			active=" class='active'"			
		tabs.="<li$active><a href='$url'>$name</a></li>\n"
			
		lddata.itemListElement[]={
			"@type": "ListItem",
			"position": i++, "item": { "@id": url.full_url(), "name": url.full_url() }
		}
	lddata.itemListElement[]={
		"@type": "ListItem",
		"position": i++, "item": { "@id": _globals.req.path.full_url(), "name": _globals.req.path.full_url() }
	}
	if _globals.tabs.map_len()>1
		data.tabs="<div><ul class='nav nav-tabs'>$tabs</ul></div>"
	data.ldmenu="<script type='application/ld+json'>$lddata</script>"
	body=''
	data.menu.each name, url
		body.="<li><a style='overflow:hidden;text-overflow:ellipsis;white-space:nowrap;' href='$url'>$name</a></li>\n"
	if data.width.is_int()==4
		body="<div class='span11 offset1'><ul class='nav nav-pills'>$body</ul></div>"
	else
		body="<div class=span2><ul class='nav nav-tabs nav-stacked'>$body</ul></div>"

	switch data.width.is_int()
		case 1:
			body.="<div class='span4'>$(data.body)</div><div class=span6>$(data.help)</div>"
		break
		case 3:
			body.="<div class='span10'>$(data.help)$(data.body)</div>"
		break
		case 4:
			body.="</div><div class=row-fluid>$(data.help)$(data.body)</div>"
		break
		default: //=2
			body.="<div class='span7'>$(data.body)</div><div class=span3>$(data.help)</div>"
	data.body=body
	login=''
	if _globals.sess.user
		login="<span class='pull-right'>$(_globals.sess.user) as $(_globals.sess.role) | <a href='$(home_url())logout/'>Logout</a> &nbsp; </span>"
	else
		login="<span class='pull-right' style='margin-right:3em;'><a href='$(home_url())login/'>Login</a> | <a href='$(home_url())register/'>Register</a></span>"
	data.login=login
	return data
}
char* page_html(map* data){
	return ---
	<!DOCTYPE html>
	<html><head><meta charset='utf-8'>
	<title>$(data.title)</title>
	<script type="application/ld+json">
	{
	"@context": "http://schema.org",
	"@type": "WebSite",
	"name": "Habib's Site",
	"alternateName": "Sanjir Habib",
	"url": "$(_globals.req.path)"
	}
	</script>
	<link rel="apple-touch-icon" href="/apple-touch-icon.png">
	<meta name="application-name" content="habib"/>
	<meta name="msapplication-square70x70logo" content="/small.jpg"/>
	<meta name="msapplication-square150x150logo" content="/medium.jpg"/>
	<meta name="msapplication-wide310x150logo" content="/wide.jpg"/>
	<meta name="msapplication-square310x310logo" content="/large.jpg"/>
	<meta name="msapplication-TileColor" content="#fff"/>
	<meta name="description" content="$(data.desc)"/>
	<meta name="keywords" content="$(data.keyword)"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="og:image" content="$(data.logo)">
	<meta name="og:description" content="$(data.desc)">
	<meta name="og:title" content="$(data.title)">
	$(data.header)
	<link rel='icon' href='$(data.logo)'></link>
	</head><body>
	<div class='row-fluid alert-success'><span class='span8'>$(data.msg)</span>$(data.login)</div>
	<div class=row-fluid>
	<div class='span3' style='text-align:center;'><a href='$(data.home)'><img style='width:auto;height:100px;padding:.3em;' src='$(data.logo)'></img></a></div>
	<div class='span7'>
	<h2 style='text-align:center;'>$(data.title)</h2>
	<div style='border-top:1px solid gray;border-bottom:1px solid gray;min-height:0.2em;text-align:center;'>$(data.desc)</div>
	</div>
	</div>
	$(data.tabs)$(data.ldmenu)
	<div class=container-fluid>
	<div class=row-fluid>$(data.body)</div>
	<hr><div class=footer style='color:#333;font-size:small;text-align:center;'>
	&copy; Habib &lt;habib@habibur.com&gt;. $(data.hits) $(data.footer)
	</div>
	</div>
	</body></html>

	---
}
char* show_port(){
	if _globals.req.protocol===:http && _globals.req.port==="80" => return ''
	return ":".._globals.req.port
}
char* full_url(char* url=NULL){
	return _globals.req.protocol.."://".._globals.req.server..show_port().."/"..url.str_ltrim("/")
}
int is_user(char* who) => return _globals.sess.user===who || _globals.sess.role===who
void authorized(char* who) => if !who.is_user() => _globals.req.path.not_found()
